'
' Pixel_process.uml
'

@startuml
title Pixel_process()
start
:Latency_start_time( pixelLatencyResource );
if (Pixel_FrameState) then (neither FrameState_Update\nnor FrameState_Pause)
 (F)
 detach
endif
if (Pixel_\nanimationControl) then (AnimationControl_\nForward or\nAnimationControl_\nForwardOne)
 #Aqua:Pixel_\nFrameState =\nFrameState_\nUpdate;
elseif (AnimationControl_\nStop) then (yes)
 #Aqua:Pixel_\nFrameState =\nFrameState_\nUpdate;
 :Pixel_\nclearAnimations|
 :Pixel_\nclearPixels|
 #Turquoise:Pixel_\nanimationControl =\nAnimationControl_\nForward;
elseif (AnimationControl_\nReset) then (yes)
 #Aqua:Pixel_\nFrameState =\nFrameState_\nUpdate;
 :Pixel_\nclearAnimations|
 :Pixel_\nclearPixels|
 #Turquoise:Pixel_\nanimationControl =\nAnimationControl_\nForward;
 #Pink:Pixel_\ninitializeStartAnimations|
elseif (AnimationControl_\nWipePause) then (yes)
 #Turquoise:Pixel_\nanimationControl =\nAnimationControl_\nPause;
 :Pixel_\nclearPixels|
 (D)
 detach
elseif (AnimationControl_\nClear) then (yes)
 #Aqua:Pixel_\nFrameState =\nFrameState_\nUpdate;
 :Pixel_\nclearPixels|
else (no)
 #Aqua:Pixel_\nFrameState =\nFrameState_\nPause;
 (F)
 detach
endif
:Process Pixel_testMode;
:Pixel_stackProcess|
if (Pixel_\nanimationControl) then (AnimationControl_\nForwardOne)
 #Turquoise:Pixel_\nanimationControl =\nAnimationControl_\nPause;
endif
(D)
note right
 pixel_process_done
end note
:Pixel_SecondaryProcessing|
#Aqua:Pixel_\nFrameState =\nFrameState_\nReady;
(F)
note right
 pixel_process_final
end note
:Latency_end_time(pixelLatencyResource)|
stop
@enduml
